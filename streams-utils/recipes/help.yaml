# Help information for Streams utils just recipes.
# Each recipe entry provides a description and groups of flags that must appear together.
# When adding new recipes, follow this structure.

setup:
  description: Set up Python virtual environment and install requirements.
  flag_groups: []

nv:
  description: Build NVIDIA HPC base image.
  flag_groups: []

base:
  description: Build base container using apptainer.
  flag_groups: []

build:
  description: Build streams container image.
  flag_groups: []

config:
  description: Generate a solver configuration file.
  flag_groups:
    - [--steps, --reynolds-number, --mach-number, --x-divisions, --y-divisions, --z-divisions, --json]
    - [--x-length, --y-length, --z-length, --rly-wr]
    - [--mpi-x-split, --span-average-io-steps, --probe-io-steps, --python-flowfield-steps, --use-python, --nymax-wr, --sensor-threshold]
    - [learning-based, ddpg, --slot-start, --slot-end, --train-episodes, --training-output, --eval-episodes, --eval-max-steps, --eval-output, --checkpoint-interval, --checkpoint-dir, --seed, --amplitude, --hidden-width, --learning-rate, --gamma, --tau, --buffer-size]

run:
  description: Run the STREAMS solver locally.
  flag_groups:
    - [--workdir, --config, --database, --python-mount]

eval:
  description: Evaluate a saved checkpoint with the solver.
  flag_groups:
    - [--workdir, --config, --database, --python-mount]
    - [--eval-only, --checkpoint]

analysis:
  description: Analyze simulation results for a given episode.
  flag_groups:
    - [--results_dir, --episode-tag, --analysis-method, --num-sensors]

visualize:
  description: Visualize simulation outputs.
  flag_groups:
    - [--results_dir, --episode-tag, --vis-type]

model:
  description: Build reduced-order models from results.
  flag_groups:
    - [--results_dir, --episode-tag, --model-type, --energy]

shell:
  description: Start a shell inside the built container.
  flag_groups: []

local:
  description: Start a shell binding STREAMS_DIR to /streams.
  flag_groups: []

vtk:
  description: Convert HDF5 output to VTK files.
  flag_groups: []

# Template for future recipes:
# recipe_name:
#   description: Short explanation.
#   flag_groups:
#     - [--flag-a, --flag-b]    # Flags that must be provided together
#     - [--flag-c]             # Another required group

