database_bl := "$STREAMS_DIR/examples/supersonic_sbli/database_bl.dat"


nv:
	mkdir -p $APPTAINER_TMPDIR

	rm -f nv.sandbox

	taskset -c 0-15 sudo apptainer build --sandbox \
		nv.sandbox \
		"docker://nvcr.io/nvidia/nvhpc:24.7-devel-cuda_multi-ubuntu22.04"	

base:
	mkdir -p $APPTAINER_TMPDIR

	rm -f base.sandbox 
	echo $APPTAINER_TMPDIR
	time taskset -c 0-15 sudo -E apptainer build --sandbox --nv base.sandbox base.apptainer
	sudo du -sh base.sandbox

build:
	rm -f streams.sif
	echo $APPTAINER_TMPDIR
	test -e libstreams*.so && rm libstreams*.so || true
	# f2py -m libstreamsMin -h ./libstreamsMin.pyf --overwrite-signature ${STREAMS_DIR}/src/min_api.F90
	# f2py -m libstreamsMod -h ./libstreamsMod.pyf --overwrite-signature ${STREAMS_DIR}/src/mod_api.F90
	# python3 patch_pyf.py
	time taskset -c 0-15 sudo -E apptainer build --nv streams.sif build.apptainer
	du -sh streams.sif



#streams_flow_type := "shock-boundary-layer"
streams_flow_type := "boundary-layer"

# build a config json file as input to the solver
# results_dir := "$STREAMS_DIR/streamspy/output"
# eval := "$STREAMS_DIR/streamspy/output/distribute_save/RL_metrics/evaluation.h5"
# training := "$STREAMS_DIR/streamspy/output/distribute_save/RL_metrics/training.h5"
# checkpoint := "$STREAMS_DIR/streamspy/output/distribute_save/RL_metrics/checkpoint"
# checkpoint_tag := "best"
results_dir := "$STREAMS_DIR/streamspy/output"
eval := "$STREAMS_DIR/streamspy/output/LB_GymData/evaluation.h5"
training := "$STREAMS_DIR/streamspy/output/LB_GymData/training.h5"
checkpoint := "$STREAMS_DIR/streamspy/output/LB_GymData/checkpoints"
checkpoint_tag := "best"

# build a config json file as input to the solver
config_output := "$STREAMS_DIR/streamspy/output/input.json"

config:
	# rm -rf {{results_dir}}
	# mkdir {{results_dir}}
	echo {{config_output}}

	# 600, 208, 100
		    
	cargo r -- \
		config-generator {{config_output}} {{streams_flow_type}} \
		--steps 30000 \
		--reynolds-number 250 \
		--mach-number 2.28 \
		--x-divisions 600 \
		--y-divisions 208 \
		--z-divisions 100 \
		--json \
		--x-length 27.0 \
		--y-length 6.0 \
		--z-length 3.8 \
		--rly-wr 2.5 \
		--mpi-x-split 4 \
		--span-average-io-steps 10 \
		--probe-io-steps 0 \
		--python-flowfield-steps 500 \
		--use-python \
		--nymax-wr 201 \
		--sensor-threshold 0.1 \
		learning-based ddpg \
		    --slot-start 100 \
		    --slot-end 149 \
		    --train-episodes 1 \
		    --training-output {{training}} \
		    --eval-episodes 1 \
		    --eval-max-steps 30000 \
		    --eval-output {{eval}} \
		    --checkpoint-interval 1 \
		    --checkpoint-dir {{checkpoint}} \
		    --seed 42 \
		    --amplitude 1.0 \
		    --hidden-width 256 \
		    --learning-rate 0.0003 \
		    --gamma 0.99 \
		    --tau 0.005 \
		    --buffer-size 100000

	cat {{config_output}}
	
	
run:
	cargo r -- run-local \
		--workdir {{results_dir}}/ \
		--config {{config_output}} \
		--database {{database_bl}} \
		--python-mount $STREAMS_DIR/streamspy \
		16

eval:
        cargo r -- run-local \
                --workdir {{results_dir}}/ \
                --config {{config_output}} \
                --database {{database_bl}} \
                --python-mount $STREAMS_DIR/streamspy \
                --eval-only \
                --checkpoint {{checkpoint}}/{{checkpoint_tag}} \
                16

analysis:
        python3 $STREAMS_DIR/streamspy/Analysis/analysis_main.py \
                --results_dir {{results_dir}} \
                --episode-tag ep_0000 \
                --analysis-method POD \

# analysis:
#        python3 $STREAMS_DIR/streamspy/Analysis/analysis_main.py \
#                --results_dir {{results_dir}} \
#                --episode-tag ep_0000 \
#                --analysis-method pysensors \
#                --num-sensors 100 \
                
#visualize:
#        python3 $STREAMS_DIR/streamspy/Visualize/visualize_main.py \
#                --results_dir {{results_dir}} \
#                --episode-tag ep_0000 \
#                --vis-type snapshot \
#                --snapshot-number 99 \
#                --variable w \
                
#visualize:
#        python3 $STREAMS_DIR/streamspy/Visualize/visualize_main.py \
#                --results_dir {{results_dir}} \
#                --episode-tag ep_0000 \
#                --vis-type animation \
#                --variable u \

#visualize:
#        python3 $STREAMS_DIR/streamspy/Visualize/visualize_main.py \
#                --results_dir {{results_dir}} \
#                --episode-tag ep_0000 \
#                --vis-type rl_metrics

visualize:
        python3 $STREAMS_DIR/streamspy/Visualize/visualize_main.py \
                --results_dir {{results_dir}} \
                --episode-tag ep_0000 \
                --vis-type sa_data \

model:
	python3 $STREAMS_DIR/streamspy/Modeling/modeling_main.py \
		--results_dir {{results_dir}} \
		--episode-tag ep_0000 \
		--model-type dmdc	
	
	
# get a shell inside the container
# requires the ./output directory (with its associated folders) to be created, 
# and a ./streams.sif file to be made
shell:
	apptainer shell --nv --bind ./output/distribute_save:/distribute_save,./output/input:/input ./streams.sif

# get a shell inside the container
# and bind your $STREAMS_DIR environment variable to the folder
# /streams
local:
	apptainer shell --nv --bind $STREAMS_DIR:/streams ./base.sif

vtk:
	cargo r --release -- hdf5-to-vtk ./output/distribute_save
