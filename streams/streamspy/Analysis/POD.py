"""Proper Orthogonal Decomposition utilities."""

from pathlib import Path
import numpy as np
import h5py


def run_pod(sa_path: Path, output_dir: Path) -> Path:
    """Compute POD modes from ``span_averages.h5`` and write them to ``output_dir``.

    Parameters
    ----------
    sa_path: Path
        Path to ``span_averages.h5`` generated by the solver.
    output_dir: Path
        Directory where the POD results will be stored.

    Returns
    -------
    Path
        The path to the created ``pod_results.h5`` file.
    """

    with h5py.File(sa_path, "r") as f:
        sa = f["span_average"][:]
        time = f["time"][:]

    # sa layout: (num_snapshots, 5, nx, ny)
    u = sa[:, 1, :, :]
    v = sa[:, 2, :, :]

    num_snaps, nx, ny = u.shape
    data = np.concatenate(
        [u.reshape(num_snaps, -1), v.reshape(num_snaps, -1)], axis=1
    ).T

    mean_field = np.mean(data, axis=1, keepdims=True)
    data_centered = data - mean_field

    modes, svals, vt = np.linalg.svd(data_centered, full_matrices=False)
    coeffs = vt.T * svals

    output_dir.mkdir(parents=True, exist_ok=True)
    out_file = output_dir / "pod_results.h5"
    with h5py.File(out_file, "w") as f:
        f.create_dataset("mean_field", data=mean_field.squeeze())
        f.create_dataset("modes", data=modes)
        f.create_dataset("singular_values", data=svals)
        f.create_dataset("coefficients", data=coeffs)
        f.create_dataset("time", data=time)

    print(f"POD results written to {out_file}")
    return out_file
    


